{
  "swagger": "2.0",
  "info": {
    "description": "This is a small CRUD service with REST API and a simple UI.",
    "version": "1.0.0",
    "title": "Swagger NC_BC_3",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "Account",
      "description": "Operations about account"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/account/create": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Create an account",
        "description": "This can only be done by the logged in account.",
        "operationId": "createAccount",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create an account object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/account/{accountid}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get an account by accountid",
        "description": "",
        "operationId": "getAccountByAccountId",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "description": "The id of the account that needs to be fetched. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid accountid supplied"
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Delete an account",
        "description": "",
        "operationId": "deleteAccount",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path and the account id",
            "description": "The id of the account to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Account"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}

